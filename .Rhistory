merged_data <- economic_data_cleaned %>%
inner_join(aggregated_crime, by = c("Ward" = "WARD"))
# View the merged data
print(merged_data)
# Load spatial data (GeoJSON)
ward_map_data <- st_read("Wards_from_2022.geojson")
# Visualize the GeoJSON geometries (no choropleth applied yet)
tm_shape(ward_map_data) +
tm_borders() +
tm_text ("WARD", size = 0.7, col="black") +
tm_layout(main.title = "DC Wards Geometries")
# Load the GeoJSON file of DC Wards
ward_map <- st_read("Wards_from_2022.geojson")
# Clean and format ward names to match the 'merged_data'
ward_map <- ward_map %>%
mutate(WARD = as.numeric(str_remove(NAME, "Ward")))
# Merge the spatial data (ward_map) with the economic and crime data (merged_data)
ward_map_data <- ward_map %>%
left_join(merged_data, by = c("WARD" = "Ward"))
# Check the merged data to ensure the join was successful
print(head(ward_map_data))
# Create the choropleth map for Median Income
tm_shape(ward_map_data) +
tm_polygons(col = "MedianIncome",
title = "Median Household Income",
palette = "YlGnBu",
style = "quantile",
n = 5,
legend.hist = TRUE,
legend.format = list(big.mark = ",")) +
tm_text(text = "WARD", size = 0.7, col = "black", fontface = "bold") +
tm_layout(title = "Median Household Income by Ward in Washington, DC",
title.position = c("center", "top"))
tm_shape(ward_map_data) +
tm_polygons(col = "TotalCrimes",
title = "Total Crimes",
palette = "Reds",
style = "quantile",
n = 5,
legend.hist = TRUE,
legend.format = list(big.mark = ",")) +
tm_text(text = "WARD", size = 0.7, col = "black", fontface = "bold") +
tm_layout(title = "Total Crimes by Ward in Washington, DC",
title.position = c("center", "top"))
ggplot(merged_data, aes(x = MedianIncome, y = TotalCrimes)) +
geom_point(color = "blue", size = 3) +
geom_smooth(method = "lm", se = FALSE, color = "darkgray") +
geom_text(aes(label = Ward), vjust = -1, size =3) +
labs(title = "Median Household Income vs. Total Crimes by Ward",
x = "Median Household Income ($)",
y = "Total Crimes") +
theme_minimal()
ggplot(merged_data, aes(x = PovertyRate, y = TotalCrimes)) +
geom_point(color = "red", size = 3) +
geom_smooth(method = "lm", se = FALSE, color = "darkgray") +
geom_text(aes(label = Ward), vjust = -1, size = 3) +
labs(title = "Poverty Rate vs. Total Crimes by Ward",
x = "Poverty Rate (%)",
y = "Total Crimes") +
theme_minimal()
ggplot(merged_data, aes(x = UnemploymentRate, y = TotalCrimes)) +
geom_point(color = "orange", size = 3) +
geom_smooth(method = "lm", se = FALSE, color = "darkgray") + # Add trend line
labs(title = "Unemployment Rate vs. Total Crimes by Ward",
x = "Unemployment Rate (%)",
y = "Total Crimes") +
theme_minimal()
total_crimes_dc <- crime_data %>%
group_by(OFFENSE) %>%
summarise(Count = n(), .groups = "drop") %>%
arrange(desc(Count))
ggplot(total_crimes_dc, aes(x = reorder(OFFENSE, Count), y = Count, fill = OFFENSE)) +
geom_col() +
coord_flip() +
labs(title = "Total Number of Crimes by Offense Type in Washington, DC",
x = "Offense Type", y = "Number of Crimes") +
theme_minimal() +
theme(legend.position = "none")
top_crimes <- crime_data %>%
group_by(WARD, OFFENSE) %>%
summarise(Count = n()) %>%
arrange(WARD, desc(Count)) %>%
group_by(WARD) %>%
slice_max(order_by = Count, n = 3) %>%
mutate(WARD = paste("Ward", WARD))
ggplot(top_crimes, aes(x = Count, y = reorder(OFFENSE, Count), fill = OFFENSE)) +
geom_col() +
facet_wrap(~ WARD, scales = "free_y") +
labs(title = "Top 3 Crimes by Ward",
x = "Number of Crimes",
y = "Offense Type") +
theme_minimal() +
theme(legend.position = "none")
library(tidyverse)
library(ggplot2)
library(sf)
library(tmap)
library(RColorBrewer)
# Load Economic Data
economic_data <- read_csv("Economic Characteristics of DC Wards.csv", show_col_types = FALSE ) %>%
select(
Ward = Name,
MedianIncome = `INCOME AND BENEFITS (IN 2022 INFLATION-ADJUSTED DOLLARS):  Total households:  Median household income (dollars)`,
PovertyRate = `PERCENTAGE WHOSE INCOME IN THE PAST 12 MONTHS IS BELOW THE POVERTY LEVEL:  All people`,
UnemploymentRate = `EMPLOYMENT STATUS:  Civilian labor force:  Unemployment Rate`
) %>%
mutate(Ward = str_extract(Ward, "Ward \\d"))  # Ensure consistent formatting
# Display the first few rows
head(economic_data)
crime_data <- read_csv("Crime_Incidents_in_the_Last_30_Days.csv", show_col_types = FALSE)
# Aggregate Crime Data by Ward
aggregated_crime <- crime_data %>%
group_by(WARD) %>%
summarize(TotalCrimes = n()) %>%
ungroup()
# Display the aggregated data
head(aggregated_crime)
economic_data_cleaned <- economic_data %>%
mutate(Ward = str_extract(Ward, "\\d+"))
# View the cleaned data
print(economic_data_cleaned)
# Convert Ward in economic_data_cleaned to numeric
economic_data_cleaned <- economic_data_cleaned %>%
mutate(Ward = as.numeric(Ward))
# Merging the Datasets
merged_data <- economic_data_cleaned %>%
inner_join(aggregated_crime, by = c("Ward" = "WARD"))
# View the merged data
print(merged_data)
# Load spatial data (GeoJSON)
ward_map_data <- st_read("Wards_from_2022.geojson")
# Visualize the GeoJSON geometries (no choropleth applied yet)
tm_shape(ward_map_data) +
tm_borders() +
tm_text ("WARD", size = 0.7, col="black") +
tm_layout(main.title = "DC Wards Geometries")
# Load the GeoJSON file of DC Wards
ward_map <- st_read("Wards_from_2022.geojson")
# Clean and format ward names to match the 'merged_data'
ward_map <- ward_map %>%
mutate(WARD = as.numeric(str_remove(NAME, "Ward")))
# Merge the spatial data (ward_map) with the economic and crime data (merged_data)
ward_map_data <- ward_map %>%
left_join(merged_data, by = c("WARD" = "Ward"))
# Check the merged data to ensure the join was successful
print(head(ward_map_data))
# Create the choropleth map for Median Income
tm_shape(ward_map_data) +
tm_polygons(col = "MedianIncome",
title = "Median Household Income",
palette = "magma",
style = "quantile",
n = 5,
legend.hist = TRUE,
legend.format = list(big.mark = ","),
border.col =NA)
tm_text(text = "WARD", size = 0.7, col = "black", fontface = "bold") +
tm_layout(title = "Median Household Income by Ward in Washington, DC",
title.position = c("center", "top"),
legend.frame = FALSE)
tm_shape(ward_map_data) +
tm_polygons(col = "TotalCrimes",
title = "Total Crimes",
palette = "Reds",
style = "quantile",
n = 5,
legend.hist = TRUE,
legend.format = list(big.mark = ",")) +
tm_text(text = "WARD", size = 0.7, col = "white", fontface = "bold",
bg.color ="darkred", bg.alpha = 0.5) +
tm_layout(title = "Total Crimes by Ward in Washington, DC",
title.position = c("center", "top"),
legend.frame = FALSE)
ggplot(merged_data, aes(x = MedianIncome, y = TotalCrimes)) +
geom_point(color = brewer.pal(9, "Set1")[1], size = 3) +
geom_smooth(method = "lm", se = FALSE, color = brewer.pal(9, "Greys")[7]) +
geom_text(aes(label = Ward), vjust = -1, size =3) +
labs(title = "Median Household Income vs. Total Crimes by Ward",
x = "Median Household Income ($)",
y = "Total Crimes") +
theme_minimal()
ggplot(merged_data, aes(x = PovertyRate, y = TotalCrimes)) +
geom_point(color = brewer.pal(9, "Set1")[1], size = 3) +
geom_smooth(method = "lm", se = FALSE, color = brewer.pal(9, "Greys")[6]) +
geom_text(aes(label = Ward), vjust = -1, size = 3, color = "black") +
labs(title = "Poverty Rate vs. Total Crimes by Ward",
x = "Poverty Rate (%)",
y = "Total Crimes") +
theme_minimal()
ggplot(merged_data, aes(x = UnemploymentRate, y = TotalCrimes)) +
geom_point(color = brewer.pal(9, "Set2")[2], size = 3) +
geom_smooth(method = "lm", se = FALSE, color = brewer.pal(9, "Greys")[6]) + # Add trend line
labs(title = "Unemployment Rate vs. Total Crimes by Ward",
x = "Unemployment Rate (%)",
y = "Total Crimes") +
theme_minimal()
total_crimes_dc <- crime_data %>%
group_by(OFFENSE) %>%
summarise(Count = n(), .groups = "drop") %>%
arrange(desc(Count))
ggplot(total_crimes_dc, aes(x = reorder(OFFENSE, Count), y = Count, fill = OFFENSE)) +
geom_col() +
coord_flip() +
labs(title = "Total Number of Crimes by Offense Type in Washington, DC",
x = "Offense Type", y = "Number of Crimes") +
theme_minimal() +
theme(legend.position = "none")
top_crimes <- crime_data %>%
group_by(WARD, OFFENSE) %>%
summarise(Count = n()) %>%
arrange(WARD, desc(Count)) %>%
group_by(WARD) %>%
slice_max(order_by = Count, n = 3) %>%
mutate(WARD = paste("Ward", WARD))
ggplot(top_crimes, aes(x = Count, y = reorder(OFFENSE, Count), fill = OFFENSE)) +
geom_col() +
facet_wrap(~ WARD, scales = "free_y") +
labs(title = "Top 3 Crimes by Ward",
x = "Number of Crimes",
y = "Offense Type") +
theme_minimal() +
theme(legend.position = "none")
library(tidyverse)
library(ggplot2)
library(sf)
library(tmap)
library(RColorBrewer)
# Load Economic Data
economic_data <- read_csv("Economic Characteristics of DC Wards.csv", show_col_types = FALSE ) %>%
select(
Ward = Name,
MedianIncome = `INCOME AND BENEFITS (IN 2022 INFLATION-ADJUSTED DOLLARS):  Total households:  Median household income (dollars)`,
PovertyRate = `PERCENTAGE WHOSE INCOME IN THE PAST 12 MONTHS IS BELOW THE POVERTY LEVEL:  All people`,
UnemploymentRate = `EMPLOYMENT STATUS:  Civilian labor force:  Unemployment Rate`
) %>%
mutate(Ward = str_extract(Ward, "Ward \\d"))  # Ensure consistent formatting
# Display the first few rows
head(economic_data)
crime_data <- read_csv("Crime_Incidents_in_the_Last_30_Days.csv", show_col_types = FALSE)
# Aggregate Crime Data by Ward
aggregated_crime <- crime_data %>%
group_by(WARD) %>%
summarize(TotalCrimes = n()) %>%
ungroup()
# Display the aggregated data
head(aggregated_crime)
economic_data_cleaned <- economic_data %>%
mutate(Ward = str_extract(Ward, "\\d+"))
# View the cleaned data
print(economic_data_cleaned)
# Convert Ward in economic_data_cleaned to numeric
economic_data_cleaned <- economic_data_cleaned %>%
mutate(Ward = as.numeric(Ward))
# Merging the Datasets
merged_data <- economic_data_cleaned %>%
inner_join(aggregated_crime, by = c("Ward" = "WARD"))
# View the merged data
print(merged_data)
# Load spatial data (GeoJSON)
ward_map_data <- st_read("Wards_from_2022.geojson")
# Visualize the GeoJSON geometries (no choropleth applied yet)
tm_shape(ward_map_data) +
tm_borders() +
tm_text ("WARD", size = 0.7, col="black") +
tm_layout(main.title = "DC Wards Geometries")+
tm_credits(text = "Source: Open Data DC - Crime Incidents Last 30 Days By Ward - https://opendata.dc.gov/datasets/dc3289eab3d2400ea49c154863312434_8/explore?location=38.904042%2C-77.012050%2C10.64",
position = c("left", "BOTTOM")
)
# Load the GeoJSON file of DC Wards
ward_map <- st_read("Wards_from_2022.geojson")
# Clean and format ward names to match the 'merged_data'
ward_map <- ward_map %>%
mutate(WARD = as.numeric(str_remove(NAME, "Ward")))
# Merge the spatial data (ward_map) with the economic and crime data (merged_data)
ward_map_data <- ward_map %>%
left_join(merged_data, by = c("WARD" = "Ward"))
# Check the merged data to ensure the join was successful
print(head(ward_map_data))
# Create the choropleth map for Median Income
tm_shape(ward_map_data) +
tm_polygons(col = "MedianIncome",
title = "Median Household Income",
palette = "magma",
style = "quantile",
n = 5,
legend.hist = TRUE,
legend.format = list(big.mark = ","),
border.col =NA)
tm_text(text = "WARD", size = 0.7, col = "black", fontface = "bold") +
tm_layout(title = "Median Household Income by Ward in Washington, DC",
title.position = c("center", "top"),
legend.frame = FALSE)+
tm_credits(text = "Source: Open Data DC - Crime Incidents Last 30 Days By Ward/ Economic Characteristics by Ward",
position = c("left", "BOTTOM")
)
tm_shape(ward_map_data) +
tm_polygons(col = "TotalCrimes",
title = "Total Crimes",
palette = "Reds",
style = "quantile",
n = 5,
legend.hist = TRUE,
legend.format = list(big.mark = ",")) +
tm_text(text = "WARD", size = 0.7, col = "white", fontface = "bold",
bg.color ="darkred", bg.alpha = 0.5) +
tm_layout(title = "Total Crimes by Ward in Washington, DC",
title.position = c("center", "top"),
legend.frame = FALSE)+
tm_credits(text = "Source: Open Data DC - Crime Incidents Last 30 Days By Ward - https://opendata.dc.gov/datasets/dc3289eab3d2400ea49c154863312434_8/explore?location=38.904042%2C-77.012050%2C10.64",
position = c("left", "BOTTOM"),
)
ggplot(merged_data, aes(x = MedianIncome, y = TotalCrimes)) +
geom_point(color = brewer.pal(9, "Set1")[1], size = 3) +
geom_smooth(method = "lm", se = FALSE, color = brewer.pal(9, "Greys")[7]) +
geom_text(aes(label = Ward), vjust = -1, size =3) +
labs(title = "Median Household Income vs. Total Crimes by Ward",
x = "Median Household Income ($)",
y = "Total Crimes",
caption = "Source: Open Data DC - Crime Incidents Last 30 Days By Ward/ Economic Characteristics by Ward") +
theme_minimal()
ggplot(merged_data, aes(x = PovertyRate, y = TotalCrimes)) +
geom_point(color = brewer.pal(9, "Set1")[1], size = 3) +
geom_smooth(method = "lm", se = FALSE, color = brewer.pal(9, "Greys")[6]) +
geom_text(aes(label = Ward), vjust = -1, size = 3, color = "black") +
labs(title = "Poverty Rate vs. Total Crimes by Ward",
x = "Poverty Rate (%)",
y = "Total Crimes",
caption = "Source: Open Data DC - Crime Incidents Last 30 Days By Ward/ Economic Characteristics by Ward") +
theme_minimal()
ggplot(merged_data, aes(x = UnemploymentRate, y = TotalCrimes)) +
geom_point(color = brewer.pal(9, "Set2")[2], size = 3) +
geom_smooth(method = "lm", se = FALSE, color = brewer.pal(9, "Greys")[6]) + # Add trend line
labs(title = "Unemployment Rate vs. Total Crimes by Ward",
x = "Unemployment Rate (%)",
y = "Total Crimes",
caption = "Source: Open Data DC - Crime Incidents Last 30 Days By Ward/ Economic Characteristics by Ward") +
theme_minimal()
total_crimes_dc <- crime_data %>%
group_by(OFFENSE) %>%
summarise(Count = n(), .groups = "drop") %>%
arrange(desc(Count))
ggplot(total_crimes_dc, aes(x = reorder(OFFENSE, Count), y = Count, fill = OFFENSE)) +
geom_col() +
coord_flip() +
labs(title = "Total Number of Crimes by Offense Type in Washington, DC",
x = "Offense Type", y = "Number of Crimes", caption = "Source: Open Data DC - Crime Incidents Last 30 Days By Ward - https://opendata.dc.gov/datasets/dc3289eab3d2400ea49c154863312434_8/explore?location=38.904042%2C-77.012050%2C10.64") +
theme_minimal() +
theme(legend.position = "none", plot.caption = element_text(hjust = 0)
)
top_crimes <- crime_data %>%
group_by(WARD, OFFENSE) %>%
summarise(Count = n()) %>%
arrange(WARD, desc(Count)) %>%
group_by(WARD) %>%
slice_max(order_by = Count, n = 3) %>%
mutate(WARD = paste("Ward", WARD))
ggplot(top_crimes, aes(x = Count, y = reorder(OFFENSE, Count), fill = OFFENSE)) +
geom_col() +
facet_wrap(~ WARD, scales = "free_y") +
labs(title = "Top 3 Crimes by Ward",
x = "Number of Crimes",
y = "Offense Type",
caption = "Source: Open Data DC - Crime Incidents Last 30 Days By Ward - https://opendata.dc.gov/datasets/dc3289eab3d2400ea49c154863312434_8/explore?location=38.904042%2C-77.012050%2C10.64") +
theme_minimal() +
theme(legend.position = "none",
plot.caption = element_text(hjust = 0)
)
library(tidyverse)
library(ggplot2)
library(sf)
library(tmap)
library(RColorBrewer)
# Load Economic Data
economic_data <- read_csv("Economic Characteristics of DC Wards.csv", show_col_types = FALSE ) %>%
select(
Ward = Name,
MedianIncome = `INCOME AND BENEFITS (IN 2022 INFLATION-ADJUSTED DOLLARS):  Total households:  Median household income (dollars)`,
PovertyRate = `PERCENTAGE WHOSE INCOME IN THE PAST 12 MONTHS IS BELOW THE POVERTY LEVEL:  All people`,
UnemploymentRate = `EMPLOYMENT STATUS:  Civilian labor force:  Unemployment Rate`
) %>%
mutate(Ward = str_extract(Ward, "Ward \\d"))  # Ensure consistent formatting
# Display the first few rows
head(economic_data)
crime_data <- read_csv("Crime_Incidents_in_the_Last_30_Days.csv", show_col_types = FALSE)
# Aggregate Crime Data by Ward
aggregated_crime <- crime_data %>%
group_by(WARD) %>%
summarize(TotalCrimes = n()) %>%
ungroup()
# Display the aggregated data
head(aggregated_crime)
economic_data_cleaned <- economic_data %>%
mutate(Ward = str_extract(Ward, "\\d+"))
# View the cleaned data
print(economic_data_cleaned)
# Convert Ward in economic_data_cleaned to numeric
economic_data_cleaned <- economic_data_cleaned %>%
mutate(Ward = as.numeric(Ward))
# Merging the Datasets
merged_data <- economic_data_cleaned %>%
inner_join(aggregated_crime, by = c("Ward" = "WARD"))
# View the merged data
print(merged_data)
# Load spatial data (GeoJSON)
ward_map_data <- st_read("Wards_from_2022.geojson")
# Visualize the GeoJSON geometries (no choropleth applied yet)
tm_shape(ward_map_data) +
tm_borders() +
tm_text ("WARD", size = 0.7, col="black") +
tm_layout(main.title = "DC Wards Geometries")+
tm_credits(text = "Source: Open Data DC - Crime Incidents Last 30 Days By Ward - https://opendata.dc.gov/datasets/dc3289eab3d2400ea49c154863312434_8/explore?location=38.904042%2C-77.012050%2C10.64",
position = c("left", "BOTTOM")
)
# Load the GeoJSON file of DC Wards
ward_map <- st_read("Wards_from_2022.geojson")
# Clean and format ward names to match the 'merged_data'
ward_map <- ward_map %>%
mutate(WARD = as.numeric(str_remove(NAME, "Ward")))
# Merge the spatial data (ward_map) with the economic and crime data (merged_data)
ward_map_data <- ward_map %>%
left_join(merged_data, by = c("WARD" = "Ward"))
# Check the merged data to ensure the join was successful
print(head(ward_map_data))
# Create the choropleth map for Median Income
tm_shape(ward_map_data) +
tm_polygons(col = "MedianIncome",
title = "Median Household Income",
palette = "magma",
style = "quantile",
n = 5,
legend.hist = TRUE,
legend.format = list(big.mark = ","),
border.col =NA)
tm_text(text = "WARD", size = 0.7, col = "black", fontface = "bold") +
tm_layout(title = "Median Household Income by Ward in Washington, DC",
title.position = c("center", "top"),
legend.frame = FALSE)+
tm_credits(text = "Source: Open Data DC - Crime Incidents Last 30 Days By Ward/ Economic Characteristics by Ward",
position = c("left", "BOTTOM")
)
tm_shape(ward_map_data) +
tm_polygons(col = "TotalCrimes",
title = "Total Crimes",
palette = "Reds",
style = "quantile",
n = 5,
legend.hist = TRUE,
legend.format = list(big.mark = ",")) +
tm_text(text = "WARD", size = 0.7, col = "white", fontface = "bold",
bg.color ="darkred", bg.alpha = 0.5) +
tm_layout(title = "Total Crimes by Ward in Washington, DC",
title.position = c("center", "top"),
legend.frame = FALSE)+
tm_credits(text = "Source: Open Data DC - Crime Incidents Last 30 Days By Ward - https://opendata.dc.gov/datasets/dc3289eab3d2400ea49c154863312434_8/explore?location=38.904042%2C-77.012050%2C10.64",
position = c("left", "BOTTOM"),
)
ggplot(merged_data, aes(x = MedianIncome, y = TotalCrimes)) +
geom_point(color = brewer.pal(9, "Set1")[1], size = 3) +
geom_smooth(method = "lm", se = FALSE, color = brewer.pal(9, "Greys")[7]) +
geom_text(aes(label = Ward), vjust = -1, size =3) +
labs(title = "Median Household Income vs. Total Crimes by Ward",
x = "Median Household Income ($)",
y = "Total Crimes",
caption = "Source: Open Data DC - Crime Incidents Last 30 Days By Ward/ Economic Characteristics by Ward") +
theme_minimal()
ggplot(merged_data, aes(x = PovertyRate, y = TotalCrimes)) +
geom_point(color = brewer.pal(9, "Set1")[1], size = 3) +
geom_smooth(method = "lm", se = FALSE, color = brewer.pal(9, "Greys")[6]) +
geom_text(aes(label = Ward), vjust = -1, size = 3, color = "black") +
labs(title = "Poverty Rate vs. Total Crimes by Ward",
x = "Poverty Rate (%)",
y = "Total Crimes",
caption = "Source: Open Data DC - Crime Incidents Last 30 Days By Ward/ Economic Characteristics by Ward") +
theme_minimal()
ggplot(merged_data, aes(x = UnemploymentRate, y = TotalCrimes)) +
geom_point(color = brewer.pal(9, "Set2")[2], size = 3) +
geom_smooth(method = "lm", se = FALSE, color = brewer.pal(9, "Greys")[6]) + # Add trend line
labs(title = "Unemployment Rate vs. Total Crimes by Ward",
x = "Unemployment Rate (%)",
y = "Total Crimes",
caption = "Source: Open Data DC - Crime Incidents Last 30 Days By Ward/ Economic Characteristics by Ward") +
theme_minimal()
total_crimes_dc <- crime_data %>%
group_by(OFFENSE) %>%
summarise(Count = n(), .groups = "drop") %>%
arrange(desc(Count))
ggplot(total_crimes_dc, aes(x = reorder(OFFENSE, Count), y = Count, fill = OFFENSE)) +
geom_col() +
coord_flip() +
labs(title = "Total Number of Crimes by Offense Type in Washington, DC",
x = "Offense Type", y = "Number of Crimes", caption = "Source: Open Data DC - Crime Incidents Last 30 Days By Ward - https://opendata.dc.gov/datasets/dc3289eab3d2400ea49c154863312434_8/explore?location=38.904042%2C-77.012050%2C10.64") +
theme_minimal() +
theme(legend.position = "none", plot.caption = element_text(hjust = 0)
)
top_crimes <- crime_data %>%
group_by(WARD, OFFENSE) %>%
summarise(Count = n()) %>%
arrange(WARD, desc(Count)) %>%
group_by(WARD) %>%
slice_max(order_by = Count, n = 3) %>%
mutate(WARD = paste("Ward", WARD))
ggplot(top_crimes, aes(x = Count, y = reorder(OFFENSE, Count), fill = OFFENSE)) +
geom_col() +
facet_wrap(~ WARD, scales = "free_y") +
labs(title = "Top 3 Crimes by Ward",
x = "Number of Crimes",
y = "Offense Type",
caption = "Source: Open Data DC - Crime Incidents Last 30 Days By Ward - https://opendata.dc.gov/datasets/dc3289eab3d2400ea49c154863312434_8/explore?location=38.904042%2C-77.012050%2C10.64") +
theme_minimal() +
theme(legend.position = "none",
plot.caption = element_text(hjust = 0)
)
