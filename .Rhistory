setwd("C:/Users/gagra/Desktop/Spring 2025/INST462/INST462-GroupProject")
library(ggplot2)
library(tidyverse)
library(ggplot2)
# Load Economic Data
economic_data <- read_csv("Economic Characteristics of DC Wards.csv", show_col_types = FALSE ) %>%
select(
Ward = Name,
MedianIncome = `INCOME AND BENEFITS (IN 2022 INFLATION-ADJUSTED DOLLARS):  Total households:  Median household income (dollars)`,
PovertyRate = `PERCENTAGE WHOSE INCOME IN THE PAST 12 MONTHS IS BELOW THE POVERTY LEVEL:  All people`,
UnemploymentRate = `EMPLOYMENT STATUS:  Civilian labor force:  Unemployment Rate`
) %>%
mutate(Ward = str_extract(Ward, "Ward \\d"))  # Ensure consistent formatting
# Display the first few rows
head(economic_data)
crime_data <- read_csv("Crime_Incidents_in_the_Last_30_Days.csv", show_col_types = FALSE)
# Aggregate Crime Data by Ward
aggregated_crime <- crime_data %>%
group_by(WARD) %>%
summarize(TotalCrimes = n()) %>%
ungroup()
# Display the aggregated data
head(aggregated_crime)
economic_data_cleaned <- economic_data %>%
mutate(Ward = str_extract(Ward, "\\d+"))
# View the cleaned data
print(economic_data_cleaned)
# Convert Ward in economic_data_cleaned to numeric
economic_data_cleaned <- economic_data_cleaned %>%
mutate(Ward = as.numeric(Ward))
# Merging the Datasets
merged_data <- economic_data_cleaned %>%
inner_join(aggregated_crime, by = c("Ward" = "WARD"))
# View the merged data
print(merged_data)
# Plot 1: Median Household Income vs. Total Crimes
ggplot(merged_data, aes(x = MedianIncome, y = TotalCrimes)) +
geom_point(color = "blue", size = 3) +
geom_smooth(method = "lm", se = FALSE, color = "darkgray")
labs(title = "Median Household Income vs. Total Crimes by Ward",
x = "Median Household Income ($)",
y = "Total Crimes") +
theme_minimal()
#Plot 2: Poverty Rate vs. Total Crimes
ggplot(merged_data, aes(x = PovertyRate, y = TotalCrimes)) +
geom_point(color = "red", size = 3) +
geom_smooth(method = "lm", se = FALSE, color = "darkgray")
labs(title = "Poverty Rate vs. Total Crimes by Ward",
x = "Poverty Rate (%)",
y = "Total Crimes") +
theme_minimal()
ggplot(merged_data, aes(x = reorder(Ward, TotalCrimes), y = TotalCrimes)) +
geom_bar(stat = "identity", fill = "green") +
geom_text(aes(label = TotalCrimes), vjust = -0.5, color = "black") +
labs(title = "Total Crimes by Ward",
x = "Ward",
y = "Total Crimes") +
theme_minimal()
ggplot(merged_data, aes(x = reorder(Ward, MedianIncome), y = MedianIncome)) +
geom_bar(stat = "identity", fill = "purple") +
labs(
title = "Median Income by Ward",
x = "Ward",
y = "Median Income ($)"
) +
theme_minimal()
# Plot: Unemployment Rate vs. Total Crimes
ggplot(merged_data, aes(x = UnemploymentRate, y = TotalCrimes)) +
geom_point(color = "orange", size = 3) +
geom_smooth(method = "lm", se = FALSE, color = "darkgray") + # Add trend line
labs(title = "Unemployment Rate vs. Total Crimes by Ward",
x = "Unemployment Rate (%)",
y = "Total Crimes") +
theme_minimal()
# Saving the Merged Data
write.csv(merged_data, "Merged_DC_Economic_Crime_Data.csv")
View(merged_data)
library(readr)
Economic_Characteristics_of_DC_Wards <- read_csv("Economic Characteristics of DC Wards.csv")
View(Economic_Characteristics_of_DC_Wards)
library(readr)
Crime_Incidents_in_the_Last_30_Days <- read_csv("Crime_Incidents_in_the_Last_30_Days.csv")
View(Crime_Incidents_in_the_Last_30_Days)
---
title: "INST_462_Group_Project"
# Display the first few rows
head(economic_data)
# Load Economic Data
economic_data <- read_csv("Economic Characteristics of DC Wards.csv", show_col_types = FALSE ) %>%
select(
Ward = Name,
MedianIncome = `INCOME AND BENEFITS (IN 2022 INFLATION-ADJUSTED DOLLARS):  Total households:  Median household income (dollars)`,
PovertyRate = `PERCENTAGE WHOSE INCOME IN THE PAST 12 MONTHS IS BELOW THE POVERTY LEVEL:  All people`,
UnemploymentRate = `EMPLOYMENT STATUS:  Civilian labor force:  Unemployment Rate`
) %>%
mutate(Ward = str_extract(Ward, "Ward \\d"))  # Ensure consistent formatting
library(tidyverse)
library(ggplot2)
library(tidyverse)
library(ggplot2)
# Load Economic Data
economic_data <- read_csv("Economic Characteristics of DC Wards.csv", show_col_types = FALSE ) %>%
select(
Ward = Name,
MedianIncome = `INCOME AND BENEFITS (IN 2022 INFLATION-ADJUSTED DOLLARS):  Total households:  Median household income (dollars)`,
PovertyRate = `PERCENTAGE WHOSE INCOME IN THE PAST 12 MONTHS IS BELOW THE POVERTY LEVEL:  All people`,
UnemploymentRate = `EMPLOYMENT STATUS:  Civilian labor force:  Unemployment Rate`
) %>%
mutate(Ward = str_extract(Ward, "Ward \\d"))  # Ensure consistent formatting
# Display the first few rows
head(economic_data)
crime_data <- read_csv("Crime_Incidents_in_the_Last_30_Days.csv", show_col_types = FALSE)
# Aggregate Crime Data by Ward
aggregated_crime <- crime_data %>%
group_by(WARD) %>%
summarize(TotalCrimes = n()) %>%
ungroup()
# Display the aggregated data
head(aggregated_crime)
economic_data_cleaned <- economic_data %>%
mutate(Ward = str_extract(Ward, "\\d+"))
# View the cleaned data
print(economic_data_cleaned)
# Convert Ward in economic_data_cleaned to numeric
economic_data_cleaned <- economic_data_cleaned %>%
mutate(Ward = as.numeric(Ward))
# Merging the Datasets
merged_data <- economic_data_cleaned %>%
inner_join(aggregated_crime, by = c("Ward" = "WARD"))
# View the merged data
print(merged_data)
# Plot 1: Median Household Income vs. Total Crimes
ggplot(merged_data, aes(x = MedianIncome, y = TotalCrimes)) +
geom_point(color = "blue", size = 3) +
geom_smooth(method = "lm", se = FALSE, color = "darkgray")
labs(title = "Median Household Income vs. Total Crimes by Ward",
x = "Median Household Income ($)",
y = "Total Crimes") +
theme_minimal()
#Plot 2: Poverty Rate vs. Total Crimes
ggplot(merged_data, aes(x = PovertyRate, y = TotalCrimes)) +
geom_point(color = "red", size = 3) +
geom_smooth(method = "lm", se = FALSE, color = "darkgray")
labs(title = "Poverty Rate vs. Total Crimes by Ward",
x = "Poverty Rate (%)",
y = "Total Crimes") +
theme_minimal()
ggplot(merged_data, aes(x = reorder(Ward, TotalCrimes), y = TotalCrimes)) +
geom_bar(stat = "identity", fill = "green") +
geom_text(aes(label = TotalCrimes), vjust = -0.5, color = "black") +
labs(title = "Total Crimes by Ward",
x = "Ward",
y = "Total Crimes") +
theme_minimal()
ggplot(merged_data, aes(x = reorder(Ward, MedianIncome), y = MedianIncome)) +
geom_bar(stat = "identity", fill = "purple") +
labs(
title = "Median Income by Ward",
x = "Ward",
y = "Median Income ($)"
) +
theme_minimal()
# Plot: Unemployment Rate vs. Total Crimes
ggplot(merged_data, aes(x = UnemploymentRate, y = TotalCrimes)) +
geom_point(color = "orange", size = 3) +
geom_smooth(method = "lm", se = FALSE, color = "darkgray") + # Add trend line
labs(title = "Unemployment Rate vs. Total Crimes by Ward",
x = "Unemployment Rate (%)",
y = "Total Crimes") +
theme_minimal()
# Saving the Merged Data
write.csv(merged_data, "Merged_DC_Economic_Crime_Data.csv")
library(tidyverse)
library(ggplot2)
library(sf)
library(tidyverse)
library(ggplot2)
library(sf)
install.packages("sf")
install.packages("tmap")
library(tidyverse)
library(ggplot2)
library(sf)
library(tmap)
View(merged_data)
# Load the GeoJSON file of DC Wards (update path if needed)
ward_map <- st_read("Wards_from_2022.geojson")
View(ward_map)
# Load the GeoJSON file of DC Wards (update path if needed)
ward_map <- st_read("Wards_from_2022.geojson")
# Clean and format ward names to match your merged dataset
ward_map <- ward_map %>%
mutate(WARD = as.numeric(str_remove(NAME, "Ward")))
View(ward_map)
# Load the GeoJSON file of DC Wards (update path if needed)
ward_map <- st_read("Wards_from_2022.geojson")
# Clean and format ward names to match your merged dataset
ward_map <- ward_map %>%
mutate(WARD = as.numeric(str_remove(NAME, "Ward")))
# Merge with your dataset
ward_map_data <- ward_map %>%
left_join(merged_data, by = c("WARD" = "Ward"))
# Load the GeoJSON file of DC Wards (update path if needed)
ward_map <- st_read("Wards_from_2022.geojson")
# Clean and format ward names to match your merged dataset
ward_map <- ward_map %>%
mutate(WARD = as.numeric(str_remove(NAME, "Ward")))
# Merge with your dataset
ward_map_data <- ward_map %>%
left_join(merged_data, by = c("WARD" = "Ward"))
# Create the choropleth map
tm_shape(ward_map_data) +
tm_polygons(col = "TotalCrimes",
title = "Total Crimes",
palette = "Blues",
style = "quantile",
n = 5,
legend.hist = TRUE,
legend.format = list(big.mark = ",")
)  +
tm_layout(title = "Total Crimes by Ward in Washington, DC", title.position = c("center", "top"))
